plugins {
	id 'java-library'
	id 'maven-publish'
	id 'signing'

	id 'java'
	// "apply false" -> damit bei "gradle build" in SpringBoot-Projekten eine jar-Datei erstellt wird. Sonst nicht.
    id 'org.springframework.boot' version '2.4.5' apply false
	id 'io.spring.dependency-management' version '1.1.5'
}

ext {
    libraryRepo  = "https://maven.pkg.github.com/Systemhaus-Westfalia/adempiere-shw"
    patchVersion = System.getenv("ADEMPIERE_LIBRARY_VERSION") ?: "local-1.0.1"
    baseVersion  = "3.9.4.001"
    baseGroupId  = "io.github.adempiere"
    publishGroupId  = "com.shw"
}

sourceCompatibility = "1.11"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
       // Aus https://github.com/Systemhaus-Westfalia/adempiere-shw/blob/main/shw_libs/build.gradle
       url = "https://maven.pkg.github.com/Systemhaus-Westfalia/adempiere-shw"
        credentials {
        	username = System.getenv("GITHUB_DEPLOY_USER") ?: System.properties['deploy.user']
            password = System.getenv("GITHUB_DEPLOY_TOKEN") ?: System.properties['deploy.token'] 
		}
	}
}

allprojects {
    tasks.withType(Javadoc) {
    	options.addStringOption('Xdoclint:none', '-quiet')
   	}
}

compileJava { 
  options.encoding = "UTF-8" 
}

javadoc {
    options.charSet = 'UTF-8'
}

dependencies {
   api fileTree(
        dir: 'lib',
        include: [
            '*.jar'
        ]
    )
    //	ADempiere Core
    api "${baseGroupId}:base:${baseVersion}"
    // Jakarta RESTful Web Services
	// https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
	api 'javax.ws.rs:javax.ws.rs-api:2.1.1'
	// Jersey core client implementation
	// https://mvnrepository.com/artifact/  org.glassfish.jersey.core/jersey-client
	api 'org.glassfish.jersey.core:jersey-client:2.34'
	// https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
	api 'org.glassfish.jersey.inject:jersey-hk2:2.34'
    // JSON in Java
	// https://mvnrepository.com/artifact/org.json/json
	api 'org.json:json:20211205'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	api 'org.apache.commons:commons-lang3:3.0'
    api 'com.lowagie:itext:2.1.7'
    // https://mvnrepository.com/artifact/com.itextpdf/pdfa
	api 'com.itextpdf:pdfa:7.1.13'
    // https://mvnrepository.com/artifact/com.itextpdf/itextpdf
    api 'com.itextpdf:itextpdf:5.5.2'
    api 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
	api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.0'
    //  SHW Libraries
    api "com.shw:lsv-general:1.0.2"

    // Dependencies from file pom.xml (electronic invoice Maven project frmm MMHH)
    api platform('org.springframework.boot:spring-boot-dependencies:2.4.5')
	api 'org.springframework.boot:spring-boot-starter'
	api 'jakarta.validation:jakarta.validation-api:2.0.2'

    api "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3"
    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter"
    api "org.springframework.boot:spring-boot-starter-test"
    api "io.jsonwebtoken:jjwt:0.9.0"
    api "org.json:json:20160810"
    api "org.bouncycastle:bcprov-jdk15on:1.60"
    api "org.glassfish.jersey.core:jersey-client:2.25.1"
    api "org.glassfish.jersey.media:jersey-media-json-jackson:2.25.1"
    api "org.bitbucket.b_c:jose4j:0.7.1"
    api "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8"
    api "au.com.dius.pact.consumer:junit:4.1.11"

    // From LSV-General
    // Es wird vorüberghehend die version "commons-lang3:3.0" von vorher. Das ist auch in lsv-general so.
    // Später kann auf eine neue Version umgesattelt werden.
    // implementation 'org.apache.commons:commons-lang3:3.13.0'   // eine Lösung ist  commons-lang3-3.14.0.jar

    // Es wird vorüberghehend die version "commons-lang3:3.0" von vorher. Das ist auch in lsv-general so.
    // Später kann auf eine neue Version umgesattelt werden.
    //implementation 'com.itextpdf:itextpdf:5.5.9'

}

sourceSets {
    main {
         java {
            srcDirs = ['src/main/java']
         }
    }
}

jar {
	manifest {
		attributes(
			"Implementation-Title": "Localización El Salvador Facturación Electrónica (General)",
			"Implementation-Version": patchVersion,
			"EntityType": "LSV"
		)
    }
}

publishing {
    repositories {
		mavenLocal()
        maven {
            url = libraryRepo
            credentials {
                username = System.getenv("GITHUB_DEPLOY_USER") ?: System.properties['deploy.user']
                password = System.getenv("GITHUB_DEPLOY_TOKEN") ?: System.properties['deploy.token'] 
            }
        }
    }
    
    publications {
        maven(MavenPublication) {
			groupId = publishGroupId
			artifactId = 'electronic-invoicing-sv'
			version = patchVersion
           	from components.java
           	pom {
                name = 'Localización El Salvador Facturación Electrónica (General)'
                description = 'Localización para El salvador Facturación Electrónica (General) de Systemhaus Westfalia'
                url = 'http://adempiere.io/'
                licenses {
                    license {
                        name = 'GNU General Public License, version 2'
                        url = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mariocalderon'
                        name = 'Mario Calderon'
                        email = 'mcalderon@westfalia-it.com'
                    }
                }
            }
		}
	}
}
